/*
 * This source file was generated by the Gradle 'init' task
 */
package com.neverless;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.datatype.jdk8.Jdk8Module;
import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
import com.neverless.domain.AccountRepository;
import com.neverless.domain.impl.AccountRepositoryImpl;
import com.neverless.integration.WithdrawalService;
import com.neverless.integration.WithdrawalServiceStub;
import com.neverless.processing.AccountOperationManager;
import com.neverless.processing.ExternalWithdrawalManager;
import com.neverless.processing.InMemoryAccountOperationManager;
import com.neverless.resources.Resources;
import io.javalin.Javalin;
import io.javalin.json.JavalinJackson;


public class App {
    private final AccountRepository accountRepo = new AccountRepositoryImpl();
    private final AccountOperationManager accountOperationManager = new InMemoryAccountOperationManager(accountRepo, 8);

    private final WithdrawalService<Long> withdrawalService = new WithdrawalServiceStub<>();
    private final ExternalWithdrawalManager externalWithdrawalManager = new ExternalWithdrawalManager(withdrawalService);
    private final Resources resources = new Resources(accountOperationManager, externalWithdrawalManager);
    private final Javalin javalin;

    public App() {
        this.javalin = Javalin.create(config -> {
            config.jsonMapper(new JavalinJackson(
                    new ObjectMapper()
                            .registerModule(new Jdk8Module())
                            .registerModule(new JavaTimeModule()),
                    false
            ));
            config.bundledPlugins.enableDevLogging();
            config.router.mount(resources::register);
        });
    }

    public void start(int port) {
        javalin.start(port);
    }

    public void stop() {
        accountOperationManager.shutdown();
        externalWithdrawalManager.shutdown();
        javalin.stop();
    }

    public int port() {
        return javalin.port();
    }

    public static void main(String[] args) {
        final var app = new App();
        Runtime.getRuntime().addShutdownHook(new Thread(app::stop));
        app.start(8082);

    }
}
